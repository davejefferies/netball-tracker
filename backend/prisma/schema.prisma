// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
    previewFeatures = ["relationJoins"]
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model Role {
    id          Int     @id @default(autoincrement())
    code        String
    name        String
    description String?
}

model Sport {
    id          Int     @id @default(autoincrement())
    name        String
    description String?
    positions   SportPosition[]
}

model SportPosition {
    id          Int     @id @default(autoincrement())
    sportId     Int
    name        String @unique
    description String?
    sport       Sport?  @relation(fields: [sportId], references: [id])

    @@map("sport_position")
}

model Team {
    id             Int     @id @default(autoincrement())
    name           String
    coach          String?
    coordinatorId  Int
    createdAt      DateTime @default(now())
    coordinator    User?  @relation(fields: [coordinatorId], references: [id])
    teamMembers    TeamMember[]
    schedules      Schedule[]
}

model TeamMember {
    id             Int     @id @default(autoincrement())
    teamId         Int
    name           String
    positions      String
    JoinedAt       DateTime @default(now())
    team           Team?  @relation(fields: [teamId], references: [id])

    @@map("team_member")
}

model User {
    id          Int     @id @default(autoincrement())
    firstName    String
    lastName     String
    email        String  @unique
    password     String
    roleId       Int
    createdAt    DateTime @default(now())
    teams        Team[]
}

model ScheduleType {
    id          Int     @id @default(autoincrement())
    name        String
    text        String
    description String
    schedules   Schedule[]

    @@map("schedule_type")
}

model Schedule {
    id            Int     @id @default(autoincrement())
    typeId        Int
    teamId        Int
    opponent      String
    date          DateTime?
    createdAt     DateTime? @default(now())
    type          ScheduleType?  @relation(fields: [typeId], references: [id])
    team          Team?  @relation(fields: [teamId], references: [id])
    trainingItems TrainingItem[]
}

model TrainingItem {
    id          Int     @id @default(autoincrement())
    scheduleId  Int
    name        String
    duration    Int
    notes       String?
    schedule    Schedule?  @relation(fields: [scheduleId], references: [id])

    @@map("schedule")
}